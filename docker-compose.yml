version: '3.9'

services:
  db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: techflow_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 5s
      timeout: 3s
      retries: 5

  invoice-service:
    build: ./invoice-service
    ports:
      - "3001:3000"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: admin
      DB_PASSWORD: password
      DB_NAME: techflow_db
    depends_on:
      db:
        condition: service_healthy

  subscription-service:
    build: ./subscription-service
    ports:
      - "3002:3000"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: admin
      DB_PASSWORD: password
      DB_NAME: techflow_db
    depends_on:
      db:
        condition: service_healthy

  inventory-service:
    build: ./inventory-service
    ports:
      - "3003:3000"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: admin
      DB_PASSWORD: password
      DB_NAME: techflow_db
    depends_on:
      db:
        condition: service_healthy

  support-service:
    build: ./support-service
    ports:
      - "3004:3000"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: admin
      DB_PASSWORD: password
      DB_NAME: techflow_db
    depends_on:
      db:
        condition: service_healthy

  analytics-service:
    build: ./analytics-service
    ports:
      - "3005:3000"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: admin
      DB_PASSWORD: password
      DB_NAME: techflow_db
    depends_on:
      db:
        condition: service_healthy

  api-gateway:
    build: ./api-gateway/API Gateway
    ports:
      - "8080:8080"
    depends_on:
      - invoice-service
      - subscription-service
      - inventory-service
      - support-service
      - analytics-service

  frontend:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./frontend:/usr/share/nginx/html
    restart: always

volumes:
  postgres-data: